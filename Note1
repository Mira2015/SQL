Note1 :

/Reference : https://academy.vertabelo.com/
The most basic usage of ranking functions is: RANK() OVER(ORDER BY column1, column2...).

The ranking functions we have learned:
RANK() - returns the rank (a number) of each row with respect to the sorting specified within parentheses.
DENSE_RANK() - returns a 'dense' rank, i.e. there are no gaps in numbering.
ROW_NUMBER() - returns a unique rank number, so even rows with the same value get consecutive numbers.
NTILE(x) - distributes the rows into a specific number of groups, provided as x.
To get col1 of the row with rank place1 in a ranking sorted by col2, write:

WITH ranking AS
  (SELECT
    RANK() OVER (ORDER BY col2) AS RANK,
    col1
  FROM table_name)

SELECT col1
FROM ranking
WHERE RANK = place1;




You know BETWEEN already – it's used to define a range. So far, you've used it to define a range of values – this time, we're going to use it to define a range of rows instead. What are the two bounds? The bounds can be any of the five options:
UNBOUNDED PRECEDING – the first possible row.
PRECEDING – the n-th row before the current row (instead of n, write the number of your choice).
CURRENT ROW – simply current row.
FOLLOWING – the n-th row after the current row.
UNBOUNDED FOLLOWING – the last possible row.
The lower bound must come BEFORE the upper bound. In other words, a construction like: ...ROWS BETWEEN CURRENT ROW AND UNBOUNDED PRECEDING doesn't make sense and you'll get an error if you run it.
